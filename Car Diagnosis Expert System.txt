;;+==================================================+;;+ CAR DIAGNOSIS EXPERT SYSTEM  +;;+==================================================+(defrule system-banner ""  (declare (salience 10))  =>  (printout t crlf crlf)  (printout t "CAR DIAGNOSIS EXPERT SYSTEM")  (printout t crlf crlf))(defrule print-repair ""  (declare (salience 10))  (repair ?item)  =>  (printout t crlf crlf)  (printout t "TASHKHIS/TOSIYE:")  (printout t crlf crlf)  (format t " %s%n%n%n" ?item));;+==================+;;+ YES /NO QUESTION +;;+==================+(deffunction ask-question (?question $?allowed-values)   (printout t ?question)   (bind ?answer (read))   (if (lexemep ?answer)        then (bind ?answer (lowcase ?answer)))   (while (not (member ?answer ?allowed-values)) do      (printout t ?question)      (bind ?answer (read))      (if (lexemep ?answer)           then (bind ?answer (lowcase ?answer))))   ?answer)(deffunction yes-or-no-p (?question)   (bind ?response (ask-question ?question yes no y n))   (if (or (eq ?response yes) (eq ?response y))       then TRUE        else FALSE));;+=============+;;+ QUERY RULES +;;+=============+(defrule sTART-1 ""     (not (repair ?))    =>    (if (yes-or-no-p " Does the machine start(yes/no)? ")         then         (assert (START YES))          else         (assert (START NO))))((defrule sTART-2 ""     (START NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does the starter turn?(yes/no)? ")         then         (assert (TURN YES))          else         (assert (TURN NO))))(defrule sTART-3 ""     (TURN NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does the body of the car battery have cracks?(yes/no)? ")         then         (assert (CBT YES))          else         (assert (CBT NO))))(defrule sTART-3-1 ""    (CBT YES)   (not (repair ?))    =>    (assert (repair " Change the car battery.")))   (defrule sTART-4 ""     (CBT NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the body of the car battery corroded?(yes/no)? ")         then         (assert (BCC YES))          else         (assert (BCC NO))))(defrule sTART-4-1 ""    (BCC YES)   (not (repair ?))    =>    (assert (repair " Wash the battery connections with water and baking soda..")))(defrule sTART-5 ""     (BCC NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the battery water level low?(yes/no)? ")         then         (assert (ACS YES))          else         (assert (ACS NO))))(defrule sTART-5-1 ""    (ACS YES)   (not (repair ?))    =>    (assert (repair " Fill the deficit with distilled water.")))(defrule sTART-6 ""     (ACS NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does touching the battery connections increase the light of the lamps?(yes/no)? ")         then         (assert (LV YES))          else         (assert (LV NO))))(defrule sTART-6-1 ""    (LV YES)   (not (repair ?))    =>    (assert (repair " Open and sand the connections. Then close them tightly and cover it with grease.")))(defrule sTART-7 ""     (LV NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the battery low?(yes/no)? ")         then         (assert (LC YES))          else         (assert (LC NO))))(defrule sTART-7-1 ""    (LC YES)   (not (repair ?))    =>    (assert (repair " Charge the battery.")))(defrule sTART-8 ""     (LC NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the battery cable to the starter rotten?(yes/no)? ")         then         (assert (CC YES))          else         (assert (CC NO))))(defrule sTART-8-1 ""    (CC YES)   (not (repair ?))    =>    (assert (repair " Change the battery cable.")))(defrule sTART-9 ""     (CC NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the cable between the battery and the starter loose?(yes/no)? ")         then         (assert (CS YES))          else         (assert (CS NO))))(defrule sTART-9-1 ""    (CS YES)   (not (repair ?))    =>    (assert (repair " Tighten the cable between the battery and the starter.")))(defrule sTART-10 ""    (or (CS NO)(TURN YES))    (not (repair ?))    =>    (if (yes-or-no-p " Does the starter turn the engine normally? (yes/no)? ")         then         (assert (NT YES))          else         (assert (NT NO))))(defrule sTART-11 ""     (NT NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does the starter work? (yes/no)? ")         then         (assert (SW YES))          else         (assert (SW NO))))(defrule sTART-11-1 ""    (SW NO)   (not (repair ?))    =>    (assert (repair " Repair and replace thermal switches if necessary.")))(defrule sTART-12 ""     (SW YES)    (not (repair ?))    =>    (if (yes-or-no-p " Does the switch reach the electric starter? (yes/no)? ")         then         (assert (SE YES))          else         (assert (SE NO))))(defrule sTART-13 ""     (SE NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the connection cable between the switch and the starter loose or rotten? (yes/no)? ")         then         (assert (SWS YES))          else         (assert (SWS NO))))(defrule sTART-13-1 ""    (SWS YES)   (not (repair ?))    =>    (assert (repair " Repair the connection cable between the switch and the starter or change it if necessary.")))(defrule sTART-14 ""    (or (SWS NO)(SE YES))    (not (repair ?))    =>    (if (yes-or-no-p " Does the starter crank the engine slowly and make an abnormal noise? (yes/no)? ")         then         (assert (SS YES))          else         (assert (SS NO))))(defrule sTART-14-1 ""    (SS YES)   (not (repair ?))    =>    (assert (repair " Open and check the starter. If it cannot be repaired, replace it.")))(defrule sTART-15 ""     (SE NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does it start and reject? (yes/no)? ")         then         (assert (RAD YES))          else         (assert (RAD NO))))(defrule sTART-15-1 ""    (RAD YES)   (not (repair ?))    =>    (assert (repair " Check the flywheel gear.")))(defrule sTART-16 ""     (RAD NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does it start but the solenoid does not work? (yes/no)? ")         then         (assert (SLN YES))          else         (assert (SLN NO))))(defrule sTART-16-1 ""    (SLN YES)   (not (repair ?))    =>    (assert (repair " Check the solenoid and replace it if it is not repairable.")))(defrule sTART-17 ""    (or (SLN NO)(NT YES))    (not (repair ?))    =>    (if (yes-or-no-p " Does the engine turn with the starter but does not turn on? (yes/no)? ")         then         (assert (MTURN YES))          else         (assert (MTURN NO))))(defrule sTART-17-1 ""    (MTURN NO)   (not (repair ?))    =>    (assert (repair " Check the flywheel gear.")))(defrule sTART-18 ""     (MTURN YES)    (not (repair ?))    =>    (if (yes-or-no-p " Is the spark of car candles good and stable? (yes/no)? ")         then         (assert (SPARK YES))          else         (assert (SPARK NO))))(defrule sTART-19 ""     (SPARK NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the electric hammer corroded? (yes/no)? ")         then         (assert (CP YES))          else         (assert (CP NO))))(defrule sTART-19-1 ""    (CP YES)   (not (repair ?))    =>    (assert (repair " Clean the hammer corroded or change it if necessary.")))(defrule sTART-20 ""     (CP NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does Delko have cracks or burns? (yes/no)? ")         then         (assert (DT YES))          else         (assert (DT NO))))(defrule sTART-20-1 ""    (DT YES)   (not (repair ?))    =>    (assert (repair " Change the Delko")))(defrule sTART-21 ""     (DT NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is there moisture inside the delko or coil head? (yes/no)? ")         then         (assert (WET YES))          else         (assert (WET NO))))(defrule sTART-21-1 ""    (WET YES)   (not (repair ?))    =>    (assert (repair " Clean and dry the inside of the delko or the head of the coil.")))(defrule sTART-22 ""     (WET NO)    (not (repair ?))    =>    (if (yes-or-no-p " Are the cables between coil and Delko rotten or loose? (yes/no)? ")         then         (assert (WORN YES))          else         (assert (WORN NO))))(defrule sTART-22-1 ""    (WORN YES)   (not (repair ?))    =>    (assert (repair " Change and tighten the cables between coil and Delko")))(defrule sTART-23 ""     (WORN NO)    (not (repair ?))    =>    (if (yes-or-no-p " Are the spark plug wires rotten? (yes/no)? ")         then         (assert (WSR YES))          else         (assert (WSR NO))))(defrule sTART-23-1 ""    (WSR YES)   (not (repair ?))    =>    (assert (repair " Change the spark plug wires")))(defrule sTART-24 ""    (or (WSR NO)(SPARK YES))    (not (repair ?))    =>    (if (yes-or-no-p " Are car spark plugs healthy and clean? (yes/no)? ")         then         (assert (TAMIZ YES))          else         (assert (TAMIZ NO))))(defrule sTART-24-1 ""    (TAMIZ NO)   (not (repair ?))    =>    (assert (repair " Change or repair car spark plugs")))(defrule sTART-25 ""     (TAMIZ YES)    (not (repair ?))    =>    (if (yes-or-no-p " Does the fuel reach the engine? (yes/no)? ")         then         (assert (SMR YES))          else         (assert (SMR NO))))(defrule sTART-25-1 ""    (SMR NO)   (not (repair ?))    =>    (assert (repair " Check the filter pump and fuel line.")))(defrule sTART-26 ""     (SMR YES)    (not (repair ?))    =>    (if (yes-or-no-p " Is the timing belt cut? (yes/no)? ")         then         (assert (TTR YES))          else         (assert (TTR NO))))(defrule sTART-26-1 ""    (TTR YES)   (not (repair ?))    =>    (assert (repair " Change timing belt and adjust it.")))(defrule sTART-27 ""    (or (TTR NO)(START YES))    (not (repair ?))    =>    (if (yes-or-no-p " Is it seen in oil radiator water (yes/no)? ")         then         (assert (OIL YES))          else         (assert (OIL NO))))(defrule sTART-27-1 ""    (OIL YES)   (not (repair ?))    =>    (assert (repair " Check the cylinder head gasket and replace if necessary. ")))(defrule sTART-28 ""     (OIL NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is the engine oil containing water (yes/no)? ")         then         (assert (OW YES))          else         (assert (OW NO))))(defrule sTART-28-1 ""    (OW YES)   (not (repair ?))    =>    (assert (repair " The cylinder has a crack, repair or replace it.")))(defrule sTART-29 ""     (OW NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is it seen inside the ventilation or the oil carburetor (yes/no)? ")         then         (assert (PT YES))          else         (assert (PT NO))))(defrule sTART-29-1 ""    (PT YES)   (not (repair ?))    =>    (assert (repair " The piston is broken.")))(defrule sTART-30 ""     (PT NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is it out of the exhaust of the blue smoke (yes/no)? ")         then         (assert (DOD YES))          else         (assert (DOD NO))))(defrule sTART-30-1 ""    (DOD YES)   (not (repair ?))    =>    (assert (repair " Replace the piston rings.")))(defrule sTART-31 ""     (DOD NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does the car turn on and ripping and turn off (yes/no)? ")         then         (assert (RIP YES))          else         (assert (RIP NO))))(defrule sTART-31-1 ""    (RIP YES)   (not (repair ?))    =>    (assert (repair " It may be water in the tank of the car. Check it first and correct it if there is; Low water values ​​are removed by adding antifreeze. If the problem does not fix, empty the tank and dry the refueling path with air pressure.")))(defrule sTART-32 ""     (RIP NO)    (not (repair ?))    =>    (if (yes-or-no-p " Does the engine work with tremor and rough (yes/no)? ")         then         (assert (LARZESH YES))          else         (assert (LARZESH NO))))(defrule sTART-33 ""     (LARZESH YES)    (not (repair ?))    =>    (if (yes-or-no-p " Is the engine cold (yes/no)? ")         then         (assert (SARD YES))          else         (assert (SARD NO))))(defrule sTART-33-1 ""    (SARD YES)   (not (repair ?))    =>    (assert (repair " Let the engine warm.")))(defrule sTART-34 ""     (SARD NO)    (not (repair ?))    =>    (if (yes-or-no-p " Is Delko adjusted correctly (yes/no)? ")         then         (assert (DELKO YES))          else         (assert (DELKO NO))))(defrule sTART-34-1 ""    (DELKO NO)   (not (repair ?))    =>    (assert (repair " Adjust the Delko.")))(defrule sTART-35 ""     (DELKO YES)    (not (repair ?))    =>    (if (yes-or-no-p " Is the Time Valves set (yes/no)? ")         then         (assert (SOPAP YES))          else         (assert (SOPAP NO))))(defrule sTART-35-1 ""    (SOPAP NO)   (not (repair ?))    =>    (assert (repair " Set and filter valves.")))(defrule sTART-36 ""     (SOPAP YES)    (not (repair ?))    =>    (if (yes-or-no-p " Is the fuel filter adjustment (yes/no)? ")         then         (assert (SAFI YES))          else         (assert (SAFI NO))))(defrule sTART-36-1 ""    (SAFI NO)   (not (repair ?))    =>    (assert (repair " Clean or replace gasoline filters")))(defrule sTART-37 ""     (SAFI YES)    (not (repair ?))    =>    (if (yes-or-no-p " Are wires and piles healthy and attached (yes/no)? ")         then         (assert (WIRE YES))          else         (assert (WIRE NO))))(defrule sTART-37-1 ""    (WIRE NO)   (not (repair ?))    =>    (assert (repair " Check the wires and piles and fix the potential problem.")))(defrule sTART-38 ""     (or (WIRE YES)(LARZESH NO))    (not (repair ?))    =>    (if (yes-or-no-p " Is the car's acceleration reduced and has no stretching (yes/no)? ")         then         (assert (SHETAB YES))          else         (assert (SHETAB NO))))(defrule sTART-38-1 ""    (SHETAB NO)   (not (repair ?))    =>    (assert (repair " Your car seems to be okay. If you think you still have a problem, go to a mechanic.")))(defrule sTART-39 ""     (SHETAB YES)    (not (repair ?))    =>    (if (yes-or-no-p " Is the clutch wire set (yes/no)? ")         then         (assert (SIM YES))          else         (assert (SIM NO))))(defrule sTART-39-1 ""    (SIM NO)   (not (repair ?))    =>    (assert (repair " Set the clutch wire")))(defrule sTART-39-2 ""    (SIM YES)   (not (repair ?))    =>    (assert (repair " Check the clutch plate and replace the disk and clutch plate if necessary.")))